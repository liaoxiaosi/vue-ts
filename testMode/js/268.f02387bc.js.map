{"version":3,"file":"js/268.f02387bc.js","mappings":"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","sources":["webpack://test/./src/views/LoginView.vue?6cfa","webpack://test/./src/types/login.ts","webpack://test/./src/api/login.ts","webpack://test/./src/views/LoginView.vue?9d54","webpack://test/./src/views/LoginView.vue"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5f28dcaa\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"login-box\" }\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"登录\")\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_form_item = _resolveComponent(\"el-form-item\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_form = _resolveComponent(\"el-form\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_el_form, {\n      ref: \"loginFormRef\",\n      model: _ctx.loginForm,\n      \"status-icon\": \"\",\n      rules: _ctx.rules,\n      \"label-width\": \"120px\",\n      class: \"demo-loginForm\"\n    }, {\n      default: _withCtx(() => [\n        _createVNode(_component_el_form_item, {\n          label: \"账号：\",\n          prop: \"userName\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_el_input, {\n              modelValue: _ctx.loginForm.userName,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.loginForm.userName) = $event)),\n              autocomplete: \"off\"\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_el_form_item, {\n          label: \"密码：\",\n          prop: \"passWord\"\n        }, {\n          default: _withCtx(() => [\n            _createVNode(_component_el_input, {\n              modelValue: _ctx.loginForm.passWord,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.loginForm.passWord) = $event)),\n              type: \"password\",\n              autocomplete: \"off\"\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.submitForm(_ctx.loginFormRef)))\n            }, {\n              default: _withCtx(() => [\n                _hoisted_2\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }, 8, [\"model\", \"rules\"])\n  ]))\n}","import type {FormInstance} from 'element-plus'\r\nimport {ref} from 'vue'\r\n//引入FormInstance，会枚举出element中数据类型\r\ninterface LoginFormInt{  //对数据的类型进行规范\r\n    userName:string,\r\n    passWord:string\r\n}\r\nclass InitData{\r\n    loginForm:LoginFormInt={  //数据 loginForm\r\n        userName:'',\r\n        passWord:''\r\n    }\r\n    // loginFormRef:any = null  //因为不知道确定的数据类型,此处是ref对象\r\n    loginFormRef=ref<FormInstance>()  //ref的泛型\r\n}\r\nexport{\r\n    LoginFormInt,\r\n    InitData\r\n}","//请求的api 分块进行处理\r\n//将封装的方法导入到此\r\nimport $http from \"@/http\";\r\n\r\n//此处知道要传的参数类型，所以直接定义类型\r\ninterface loginData {\r\n    userName:string,\r\n    passWord:string\r\n}\r\n\r\n//接收一个参数，返回$http,post请求方式，传参：data (data应该是一个对象)\r\n// export const login = data => $http({ url: \"\",method:'post',data })\r\nexport const login = (data:loginData) => $http({ url: \"/ogin\",method:'post',data })\r\n\r\n//如果是get请求，参数应该是params   函数的另一个写法 返回$http方法\r\n//export const login  (params:loginData) {\r\n//     return $http({ url: \"\",method:'post',params })\r\n// } ","\r\nimport {defineComponent,reactive,toRefs} from'vue'\r\nimport type {FormInstance} from 'element-plus'\r\nimport {InitData} from '../types/login'\r\nimport {login} from '../api/login'\r\n\r\nimport {useRouter} from 'vue-router'  //要进行路由跳转，需要引入\r\n\r\n\r\n\r\nexport default defineComponent({\r\n    setup(){\r\n        //useRouter方法调用的时候，可以得到当前的router实例\r\n        const router = useRouter()\r\n        // const data=reactive({\r\n        //     loginForm:{\r\n        //         userName:'',\r\n        //         password:''\r\n        //     },\r\n        //     rules:{\r\n        //         userName: [{ required: true, message: '请输入账号', trigger: 'blur' },\r\n        //                 { min: 3, max: 5, message: '账号长度在6-24', trigger: 'blur' },],\r\n        //         password: [{ required: true, message: '请输入密码', trigger: 'blur' },\r\n        //                 { min: 3, max: 5, message: '密码长度在6-24', trigger: 'blur' }],\r\n        //     }\r\n        // })\r\n        const data = reactive(new InitData())\r\n        const rules={\r\n                userName: [{ required: true, message: '请输入账号', trigger: 'blur' },\r\n                        { min: 6, max: 24, message: '账号长度在6-24', trigger: 'blur' },],\r\n                passWord: [{ required: true, message: '请输入密码', trigger: 'blur' },\r\n                        { min: 6, max: 24, message: '密码长度在6-24', trigger: 'blur' }],\r\n            }\r\n            // 这是@click=\"submitForm()\"，写法\r\n            // const submitForm = ()=>{\r\n            //     //加个问号，是因为，不一定能够拿到这个函数，ref不一定有值时，加?\r\n            //     data.loginFormRef?.validate((valid) => {\r\n            //         if (valid) {\r\n            //         console.log('submit!')\r\n            //         } else {\r\n            //         console.log('error submit!')\r\n            //         return false\r\n            //         }\r\n            //     })\r\n            // }\r\n            const submitForm = (loginFormRef:FormInstance)=>{ //此处还需要给参数确认数据类型 是ref值\r\n                //加个问号，是因为，不一定能够拿到这个函数，ref不一定有值时，加?\r\n                loginFormRef.validate((valid:boolean) => { //valid对象是个boolean值\r\n                    if (valid) {\r\n                    console.log('submit!')\r\n                    //验证通过，进行下一步，数据请求\r\n                    //调用接口,传参， 参数定义再 types里面的login.ts中\r\n                    login(data.loginForm).then(res=>{\r\n                      console.log('res返回的数据',res)\r\n                      //成功返回后，将数据存入到localsrotry中\r\n                      // localStorage.setItem('token',res.data.token)\r\n                      localStorage.setItem('token','lhrsy956686') //写死token存进去\r\n                      //之后进行跳转到指定页面\r\n                      // 在vue2中，可以直接使用this.route.push 的方法进行跳转\r\n                      // 但是，在vue3中的setup中没有this的概念了\r\n                      router.push('/')  //跳转到首页\r\n                    })\r\n                    } else {\r\n                      console.log('error submit!')\r\n                      return false\r\n                    }\r\n                })\r\n            }\r\n        return{\r\n            ...toRefs(data),\r\n            rules,\r\n            submitForm\r\n        }\r\n    }\r\n\r\n})\r\n","import { render } from \"./LoginView.vue?vue&type=template&id=5f28dcaa&scoped=true&ts=true\"\nimport script from \"./LoginView.vue?vue&type=script&lang=ts\"\nexport * from \"./LoginView.vue?vue&type=script&lang=ts\"\n\nimport \"./LoginView.vue?vue&type=style&index=0&id=5f28dcaa&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\main\\\\vue3\\\\test\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5f28dcaa\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_createTextVNode","render","_ctx","_cache","$props","$setup","$data","$options","_component_el_input","_resolveComponent","_component_el_form_item","_component_el_button","_component_el_form","_openBlock","_createElementBlock","_createVNode","ref","model","loginForm","rules","default","_withCtx","label","prop","modelValue","userName","$event","autocomplete","_","passWord","type","onClick","submitForm","loginFormRef","InitData","login","data","$http","url","method","defineComponent","setup","router","useRouter","reactive","required","message","trigger","min","max","validate","valid","console","log","then","res","localStorage","setItem","push","toRefs","__exports__"],"sourceRoot":""}